..
.. SPDX-License-Identifier: Apache-2.0
..

:github_url: https://github.com/IBM-Blockchain/ansible-collection/edit/main/plugins/modules/channel_consenter.py


channel_consenter -- Manage a consenter for a Hyperledger Fabric channel
========================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Specify a consenter for a Hyperledger Fabric channel.

This module works with the IBM Support for Hyperledger Fabric software or the Hyperledger Fabric Open Source Stack running in a Red Hat OpenShift or Kubernetes cluster.






Parameters
----------

  api_endpoint (required)
    The URL for the Fabric operations console.

    | **Type**: str

  api_authtype (required)
    :literal:`basic` - Authenticate to the Fabric operations console using basic authentication. You must provide both a valid API key using :emphasis:`api\_key` and API secret using :emphasis:`api\_secret`.

    | **Type**: str

  api_key (required)
    The API key for the Fabric operations console.

    | **Type**: str

  api_secret
    The API secret for the Fabric operations console.

    Only required when :emphasis:`api\_authtype` is :literal:`basic`.

    | **Type**: str

  api_timeout
    The timeout, in seconds, to use when interacting with the Fabric operations console.

    | **Type**: int
    | **Default value**: ``60``

  state
    :literal:`absent` - A consenter matching the specified name will be removed from the channel.

    :literal:`present` - Asserts that an consenter matching the specified name and configuration exists in the channel. If no consenter matches the specified name, the consenter will be added to the channel. If an consenter matches the specified name but the configuration does not match, then the consenter in the channel will be updated.

    | **Type**: str
    | **Default value**: ``present``

  path (required)
    Path to current the channel configuration file.

    This file can be fetched by using the :strong:`ERROR while parsing`\ : While parsing "M(channel\_config)" at index 39: Module name "channel\_config" is not a FQCN module.

    This file will be updated in place. You will need to keep a copy of the original file for computing the configuration update.

    | **Type**: str

  ordering_service_node (required)
    The ordering service node to use as a consenter for this channel.

    You can pass a string, which is the name of an ordering service node that is registered with the Fabric operations console.

    You can also pass a dict, which must match the result format of one of the :strong:`ERROR while parsing`\ : While parsing "M(ordering\_service\_node\_info)" at index 76: Module name "ordering\_service\_node\_info" is not a FQCN or :strong:`ERROR while parsing`\ : While parsing "M(ordering\_service\_node)" at index 109: Module name "ordering\_service\_node" is not a FQCN modules.

    | **Type**: raw

  updated_ordering_service_node
    The updated ordering service node to use as a consenter for this channel.

    This option must used if the host or port is to be updated in the consenter set.

    This must be passed as a dict, which must match the result format of one of the :strong:`ERROR while parsing`\ : While parsing "M(ordering\_service\_node\_info)" at index 81: Module name "ordering\_service\_node\_info" is not a FQCN or :strong:`ERROR while parsing`\ : While parsing "M(ordering\_service\_node)" at index 114: Module name "ordering\_service\_node" is not a FQCN modules.

    | **Type**: raw








Examples
--------

.. code-block:: yaml+jinja

    
    - name: Add consenter to channel
      hyperledger.fabric_ansible_collection.channel_consenters:
        state: present
        api_endpoint: https://console.example.org:32000
        api_authtype: basic
        api_key: xxxxxxxx
        api_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        path: channel_config.bin
        ordering_service_node: Ordering Service_1

    - name: Remove consenter from channel
      hyperledger.fabric_ansible_collection.channel_consenters:
        state: absent
        api_endpoint: https://console.example.org:32000
        api_authtype: basic
        api_key: xxxxxxxx
        api_secret: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        path: channel_config.bin
        ordering_service_node: Ordering Service_1



